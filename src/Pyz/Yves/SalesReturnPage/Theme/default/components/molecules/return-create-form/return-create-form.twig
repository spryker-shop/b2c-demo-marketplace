{% extends molecule('return-create-form', '@SprykerShop:SalesReturnPage') %}

{% block body %}
    {% set returnCreateStateTogglerJsClass = 'js-return-create__trigger-state-toggler' %}

    {{ parent() }}
{% endblock %}

{% block salesReturnOrderInfoSeparator %}{% endblock %}

{% block salesReturnProducts %}
    {% set salesReturnProductItemClass = 'grid grid--justify' %}

    {% block checkboxSelectAll %}
        {% include molecule('checkbox-select-all') with {
            modifiers: ['big'],
            data: {
                label: 'return_page.create_return.select_all_checkbox' | trans,
            },
            attributes: {
                'target-class-name': returnCreateStateTogglerJsClass,
            },
        } only %}
    {% endblock %}

    {{ parent() }}
{% endblock %}

{% block checkbox %}{% endblock %}

{% block salesReturnProductItemInfo %}
    {% embed molecule('return-product-item', 'SalesReturnPage') with {
        class: 'grid col col--expand',
        modifiers: [orderItem.productOptions ? 'with-options'],
        data: {
            item: orderItem,
        },
        embed: {
            returnItem: returnItem,
            returnCreateStateTogglerJsClass: returnCreateStateTogglerJsClass,
        },
    } only %}
        {% block checkboxColumn %}
            <div class="grid grid--nowrap col">
                <div class="col col--middle spacing-right spacing-right--inner">
                    {{ form_row(embed.returnItem.isReturnable, {
                        label: ' ',
                        attr: {
                            class: embed.returnCreateStateTogglerJsClass,
                        },
                        disabled: not data.item.isReturnable,
                        attributes: {
                            additionalModifier: 'big',
                            'is-returnable': data.item.isReturnable,
                        },
                    }) }}
                </div>

                {{ parent() }}
            </div>
        {% endblock %}

        {% block productItemInfoInner %}
            <div class="spacing-bottom">
                {% set isItemReturnable = data.item.isReturnable %}

                {% if isItemReturnable %}
                    {% for returnPolicyMessage in data.item.returnPolicyMessages %}
                        <div class="badge spacing-bottom spacing-bottom--small">
                            {{ returnPolicyMessage.value | trans(returnPolicyMessage.parameters) }}
                        </div>
                    {% endfor %}
                {% endif %}

                {% if not isItemReturnable %}
                    <div class="badge">
                        {{ 'return_page.returnable_state' | trans }}
                    </div>
                {% endif %}
            </div>

            {{ parent() }}

            {% include molecule('return-product-reason', 'SalesReturnPage') with {
                data: {
                    returnItem: embed.returnItem,
                    isReturnable: embed.returnItem.vars.value.orderItem.isReturnable,
                },
            } only %}
        {% endblock %}
    {% endembed %}

    {% if orderItem.productOptions %}
        {% include molecule('product-item-summary') with {
            modifiers: ['alternative'],
            data: {
                productItem: orderItem,
            },
        } only %}
    {% endif %}
{% endblock %}

{% block productBundle %}
    {% widget 'OrderItemsProductBundleWidget' args [data.form.vars.value.productBundleItems] with {
        embed: {
            form: data.form,
            returnCreateStateTogglerJsClass: returnCreateStateTogglerJsClass,
        },
    } only %}
        {% block bundle %}
            {% embed molecule('ordered-product-bundle', 'SalesProductBundleWidget') with {
                class: 'grid',
                modifiers: [productBundle.bundleProduct.productOptions ? 'with-options'],
                data: {
                    productBundle: productBundle,
                },
                embed: {
                    form: embed.form,
                    returnCreateStateTogglerJsClass: embed.returnCreateStateTogglerJsClass,
                },
            } only %}
                {% block contentWrapper %}
                    {% set isReturnable = true %}
                    {% for bundleItem in data.productBundle.bundleItems %}
                        {% if bundleItem.isReturnable == false %}
                            {% set isReturnable = false %}
                        {% endif %}
                    {% endfor %}

                    {{ parent() }}
                {% endblock %}

                {% block imageWrapper %}
                    <div class="grid grid--nowrap col">
                        <div class="col col--middle spacing-right spacing-right--inner">
                            {% for key, productBundle in embed.form.productBundles %}
                                {% if key == data.productBundle.bundleProduct.bundleItemIdentifier %}
                                    {{ form_row(productBundle.isReturnable, {
                                        label: ' ',
                                        attr: {
                                            class: embed.returnCreateStateTogglerJsClass,
                                        },
                                        disabled: not isReturnable,
                                        attributes: {
                                            additionalModifier: 'big',
                                            'is-returnable': isReturnable,
                                        },
                                    }) }}
                                {% endif %}
                            {% endfor %}
                        </div>

                        {{ parent() }}
                    </div>
                {% endblock %}

                {% block bundleInfoInner %}
                    {% set bundleItem = data.productBundle.bundleItems | first %}

                    <div class="spacing-bottom">
                        <div class="badge spacing-bottom spacing-bottom--small">
                            {% for returnPolicyMessage in bundleItem.returnPolicyMessages %}
                                {{ returnPolicyMessage.value | trans(returnPolicyMessage.parameters) }}
                            {% endfor %}
                        </div>

                        {% if not isReturnable %}
                            <div class="badge">
                                {{- 'sales_product_bundle_widget.returnable_state' | trans -}}
                            </div>
                        {% endif %}
                    </div>

                    {{ parent() }}

                    {% for key, productBundle in embed.form.productBundles %}
                        {% if key == data.productBundle.bundleProduct.bundleItemIdentifier %}
                            {% include molecule('return-product-reason', 'SalesReturnPage') with {
                                data: {
                                    returnItem: productBundle,
                                    isReturnable: isReturnable,
                                },
                            } only %}
                        {% endif %}
                    {% endfor %}
                {% endblock %}
            {% endembed %}

            {% if productBundle.bundleProduct.productOptions %}
                {% include molecule('product-item-summary') with {
                    modifiers: ['alternative'],
                    data: {
                        productItem: productBundle.bundleProduct,
                    },
                } only %}
            {% endif %}
        {% endblock %}
    {% endwidget %}
{% endblock %}

{% block configurableBundle %}
     {% widget 'OrderItemsConfiguredBundleWidget'
         args [orderItems]
         use view('order-returnable-items-configured-bundle-widget', 'SalesConfigurableBundleWidget')
         with {
             embed: {
                 form: data.form,
                 returnCreateStateTogglerJsClass: returnCreateStateTogglerJsClass,
             },
     } only %}
         {% block bundleItem %}
             {% embed molecule('ordered-configured-bundle', 'SalesConfigurableBundleWidget') ignore missing with {
                 class: 'spacing-right spacing-right--reset',
                 data: {
                     bundle: bundle,
                     items: data.items,
                 },
                 embed: {
                     form: embed.form,
                     returnCreateStateTogglerJsClass: embed.returnCreateStateTogglerJsClass,
                 },
             } only %}
                 {% block bundleProductItem %}
                     {% embed molecule('ordered-configured-bundle-product-secondary', 'SalesConfigurableBundleWidget') with {
                         class: 'grid',
                         data: {
                             product: data.items[item.IdSalesOrderItem],
                             currencyIsoCode: item.currencyIsoCode ?? data.currencyIsoCode,
                             image: data.items[item.IdSalesOrderItem].metadata.image,
                         },
                         embed: {
                             form: embed.form,
                             returnCreateStateTogglerJsClass: embed.returnCreateStateTogglerJsClass,
                         },
                     } only %}
                         {% block checkbox %}
                             {% for returnItem in embed.form.returnItems %}
                                 {% if returnItem.vars.value.orderItem.IdSalesOrderItem == data.product.IdSalesOrderItem %}
                                     {{ form_row(returnItem.isReturnable, {
                                         label: ' ',
                                         attr: {
                                             class: embed.returnCreateStateTogglerJsClass,
                                         },
                                         disabled: not data.product.isReturnable,
                                         attributes: {
                                             additionalModifier: 'big',
                                             'is-returnable': data.product.isReturnable,
                                         },
                                     }) }}
                                 {% endif %}
                             {% endfor %}
                         {% endblock %}

                         {% block generalInformation %}
                             <div class="spacing-bottom">
                                 {% for returnPolicyMessage in data.product.returnPolicyMessages %}
                                     <div class="badge spacing-bottom spacing-bottom--small">
                                         {{ returnPolicyMessage.value | trans(returnPolicyMessage.parameters) }}
                                     </div>
                                 {% endfor %}

                                 {% if not data.product.isReturnable %}
                                     <div class="badge">
                                         {{ 'sales_configured_bundle_widget.returnable_state' | trans }}
                                     </div>
                                 {% endif %}
                             </div>

                             {{ parent() }}

                             {% for returnItem in embed.form.returnItems %}
                                 {% if returnItem.vars.value.orderItem.IdSalesOrderItem == data.product.IdSalesOrderItem %}
                                     {% include molecule('return-product-reason', 'SalesReturnPage') with {
                                         data: {
                                             returnItem: returnItem,
                                             isReturnable: returnItem.vars.value.orderItem.isReturnable,
                                         },
                                     } only %}
                                 {% endif %}
                             {% endfor %}
                         {% endblock %}
                     {% endembed %}
                 {% endblock %}
             {% endembed %}
         {% endblock %}
     {% endwidget %}
 {% endblock %}

{% block salesReturnPageActions %}
    {% set salesReturnSaveActionClass = 'button spacing-top spacing-top--big js-return-create__target-state-toggler' %}

    {{ parent() }}
{% endblock %}
