{% extends organism('filter-section', '@SprykerShop:CatalogPage') %}

{% define data = {
    togglerClass: '',
} %}

{% block body %}
    <div class="{{ config.name }}__top-panel is-hidden-xl-only">
        <h3 class="text-center title title--medium spacing-bottom">{{ 'catalog.filter.filter' | trans }}</h3>
        <span class="{{ config.name }}__top-panel-button {{ data.togglerClass }}">
            {% include atom('icon') with {
                data: {
                    name: 'close'
                }
            } only %}
        </span>

        <div class="grid grid--middle {{ config.jsName }}__sorting"></div>
    </div>

    {% block filters %}
        {% set facets = data.filteredFacets is not empty ? data.filteredFacets : data.facets %}
        {% for filter in facets %}
            {% set filterHasValues = (filter.values is not defined) or (filter.values | length > 0) %}

            {% if filterHasValues %}
                {% block filter %}
                    {% embed molecule('toggler-item') with {
                        modifiers: ['filter', 'with-bottom-border', (loop.first ? 'mobile' : '')],
                        data: {
                            title: ('product.filter.' ~ filter.name | lower) | trans,
                            triggerClass: loop.first ? config.jsName ~ '__trigger-category' : config.jsName ~ '__trigger',
                            targetClass: config.jsName ~ '__target--' ~ filter.name,
                            isTogglerIncluded: loop.first ? true : false,
                            hiddenClass: loop.first ? 'is-hidden-sm-only' : 'is-hidden',
                        },
                        embed: {
                            filterPath: data.filterPath,
                            categories: data.categories,
                            filter: filter,
                            parentJsName: data.parentJsName,
                        },
                    } only %}
                        {% block contentText %}
                            {% include [
                                molecule('filter-' ~ embed.filter.config.name, 'CatalogPage'),
                                molecule('filter-' ~ embed.filter.config.type, 'CatalogPage')
                                ] ignore missing with {
                                data: {
                                    filterPath: embed.filterPath,
                                    categories: embed.categories,
                                    filter: embed.filter,
                                    parameter: embed.filter.config.parameterName | default(''),
                                    min: embed.filter.min | default(0),
                                    max: embed.filter.max | default(0),
                                    activeMin: embed.filter.activeMin | default(0),
                                    activeMax: embed.filter.activeMax | default(0),
                                    parentJsName: embed.parentJsName,
                                },
                            } only %}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            {% endif %}
        {% endfor %}
    {% endblock %}

    {% include molecule('toggler-accordion') with {
        attributes: {
            'trigger-class-name': config.jsName ~ '__trigger',
        },
    } only %}

    {% block actions %}
        {% set triggerButtonJsName = data.parentJsName ? data.parentJsName ~ '__trigger' %}

        <div class="{{ config.name }}__actions">
            <button type="button" class="button button--large button--expand {{ triggerButtonJsName }}">
                {{ 'catalog.filter.button' | trans }}
            </button>
        </div>
    {% endblock %}
{% endblock %}
