{% extends template('page-layout-main') %}

{% define data = {
    product: _view.product,
    productUrl: _view.productUrl,
    hostName: app.request.getSchemeAndHttpHost(),

    cart: _view.cart,
    isBundle: _view.product.attributes.bundled_product | default(null),
    bundleItems: _view.product.pyzBundledProducts,

    title: product.metaTitle | default(_view.product.name),
    metaTitle: product.metaTitle | default(_view.product.name),
    metaDescription: _view.product.metaDescription | default,
    metaKeywords: _view.product.metaKeywords | default,
} %}

{% block headStyles %}
    {{ parent() }}
    <link itemprop="url" href="{{ data.productUrl }}">
{% endblock %}

{% block headScripts %}
    {{ parent() }}

    {% widget 'AssetWidget' args ['pdp-header'] only %}
    {% endwidget %}
{% endblock %}

{% block pageInfo %}
    <div class="container__inner">
        {% block breadcrumbs %}
            {% widget 'ProductBreadcrumbsWithCategoriesWidget' args [data.product] only %}{% endwidget %}
        {% endblock %}
    </div>
{% endblock %}
{% block contentClass %} page-layout-main {% endblock %}
{% block content %}
    <div class="container__inner">
        <div class="grid">
            <meta itemprop="name" content="{{ data.product.name }}">
            <meta itemprop="url" content="{{ data.hostName }}{{ data.productUrl }}">
            <meta itemprop="sku" content="{{ data.product.sku }}">
            <meta itemprop="productId" content="{{ data.product.sku }}">
            <meta itemprop="description" content="{{ data.product.metaDescription }}">

            {% if data.product.images.0.externalUrlLarge is defined %}
                <meta itemprop="image" content="{{ data.product.images.0.externalUrlLarge }}">
            {% endif %}

            {% if data.product.attributes.brand is defined %}
                <div itemprop="brand" itemscope itemtype="https://schema.org/Brand">
                    <meta itemprop="name" content="{{ data.product.attributes.brand }}">
                </div>
            {% endif %}

            {% widget 'ProductSchemaOrgCategoryWidget' args [data.product] only %}{% endwidget %}

            {% if data.product.attributes.upcs is defined %}
                <meta itemprop="gtin12" content="{{ data.product.attributes.upcs }}">
            {% endif %}

            <meta itemprop="inProductGroupWithID" content="{{ data.product.idProductAbstract }}">

            {% include molecule('product-carousel', 'ProductDetailPage') with {
                class: 'col page-layout-main__content-pdp',
                data: {
                    product: data.product,
                },
            } only %}

            <div class="col page-layout-main__sidebar-pdp">
                {% include molecule('product-configurator', 'ProductDetailPage') with {
                    data: {
                        product: data.product,
                        isBundle: data.bundleItems,
                        bundleItems: data.bundleItems
                    }
                } only %}
            </div>
        </div>
    </div>

    {% widget 'ProductAlternativeListWidget' args [data.product] only %}{% endwidget %}

    <div class="container__inner">
        {% include molecule('product-detail', 'ProductDetailPage') with {
            data: {
                description: data.product.description,
                attributes: data.product.attributes,
                sku: data.product.sku,
            },
        } only %}
    </div>
    {% if data.bundleItems %}
        {% include molecule('product-bundle', 'ProductDetailPage') with {
            data: {
                bundleItems: data.bundleItems,
            },
        } only %}
    {% endif %}

    {% widget 'ProductReplacementForListWidget' args [data.product.sku] only %}{% endwidget %}

    <div class="container__inner">
        {% widget 'ProductDetailPageReviewWidget' args [data.product.idProductAbstract] only %}{% endwidget %}

        {% if data.product.pyzProductSetIds is not empty %}
            {% widget 'ProductSetIdsWidget' args [data.product.pyzProductSetIds] only %}{% endwidget %}
        {% endif %}
    </div>

    {% widget 'SimilarProductsWidget' args [data.product] only %}{% endwidget %}

    <div class="container__inner">
        {% embed molecule('product-cms-block', 'CmsBlockWidget') ignore missing with {
            data: {
                idProductAbstract: data.product.idProductAbstract,
            }
        } only %}
            {% block body %}
                {% cms_slot 'slt-7' required ['idProductAbstract'] with {
                    idProductAbstract: data.idProductAbstract,
                } %}
            {% endblock %}
        {% endembed %}
    </div>
{% endblock %}

{% block footerScripts %}
    {% widget 'AssetWidget' args ['pdp-footer'] only %}
    {% endwidget %}

    {{ parent() }}
{% endblock %}
